{
	"AWSTemplateFormatVersion" : "2010-09-09",
 	"Description" : "Nando Automation Demo",
  	"Parameters" : {
    		"InstanceType" : {
      			"Type" : "String",
      			"Default" : "t1.micro" 
    		},
		"AZ" : {
			"Type" : "String",
			"Default" : "us-east-1d"
		},
		"NandoDemoZone" : {
			"Type" : "String",
			"Default" : "elasticoperations.com."	
		},
		"NandoDemoName" : {
			"Type" : "String"
		},
    		"KeyName": {
      			"Type": "AWS::EC2::KeyPair::KeyName"
    		},
    		"Location1" : {
      			"Type": "String"
    		},
    		"Location2" : {
      			"Type": "String"
    		},
    		"Location3" : {
      			"Type": "String"
    		},
		"PrivateKey" : {
    			"Type" : "String"
  		}
  	},
 	"Mappings" : {
  		"SubnetConfig" : {
   			"VPC" : { "CIDR" : "10.200.0.0/16" },
   			"Public" : { "CIDR" : "10.200.0.0/24" }
  		}
 	}, 
 	"Resources" : {
    		"NandoDemoJenkinsEth0" : {
      			"Type" : "AWS::EC2::NetworkInterface",
 			"DependsOn" : "NandoDemoSecurityGroup",
      			"Properties" : {
        			"Description" : "eth0jenkins",
        			"SubnetId" : { "Ref" : "NandoDemoPublicSubnet" },
        			"GroupSet" : [ { "Ref" : "NandoDemoSecurityGroup" } ]
      			}
    		},
    		"NandoDemoJenkinsEIP" :  {
      			"Type" : "AWS::EC2::EIP",
      			"Properties" : {
        			"Domain" : "vpc"
      			}
    		},
    		"NandoDemoJenkinsAssocEIP" : {
      			"Type" : "AWS::EC2::EIPAssociation",
      			"Properties" : {
        			"NetworkInterfaceId" : { "Ref" : "NandoDemoJenkinsEth0" },
        			"AllocationId" : { "Fn::GetAtt" : [ "NandoDemoJenkinsEIP", "AllocationId" ] }
      			}
    		},
 		"NandoDemoVPC" : {
  			"Type" : "AWS::EC2::VPC",
  			"Properties" : {
 				"EnableDnsSupport" : "true",
 				"EnableDnsHostnames" : "true",
 				"CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ] },
 				"Tags" : [ 
					{ "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
 					{ "Key" : "Network", "Value" : "Public" }
 				]
 			}
 		}, 
		"NandoDemoPublicSubnet" : {
 			"Type" : "AWS::EC2::Subnet",
 			"Properties" : {
				"AvailabilityZone" : { "Ref" : "AZ" },
 				"VpcId" : { "Ref" : "NandoDemoVPC" },
 				"CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Public", "CIDR" ] },
 				"Tags" : [
 					{ "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
 					{ "Key" : "Network", "Value" : "Public" }
 				]
 			}
 		}, 
		"NandoDemoInternetGateway" : {
 			"Type" : "AWS::EC2::InternetGateway"
		}, 
		"NandoDemoInternetGatewayAttach" : {
 			"Type" : "AWS::EC2::VPCGatewayAttachment",
 			"Properties" : {
 				"VpcId" : { "Ref" : "NandoDemoVPC" },
 				"InternetGatewayId" : { "Ref" : "NandoDemoInternetGateway" }
 			}
 		}, 
		"NandoDemoPublicRouteTable" : {
 			"Type" : "AWS::EC2::RouteTable",
 			"Properties" : {
 				"VpcId" : { "Ref" : "NandoDemoVPC" }
 			}
 		}, 
		"NandoDemoPublicRoute" : {
 			"Type" : "AWS::EC2::Route",
 			"DependsOn" : "NandoDemoInternetGatewayAttach",
 			"Properties" : {
 				"RouteTableId" : { "Ref" : "NandoDemoPublicRouteTable" },
 				"DestinationCidrBlock" : "0.0.0.0/0",
 				"GatewayId" : { "Ref" : "NandoDemoInternetGateway" }
 			}
 		}, 
		"NandoDemoPublicRouteTableAssociation" : {
 			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
 			"Properties" : {
 				"SubnetId" : { "Ref" : "NandoDemoPublicSubnet" },
 				"RouteTableId" : { "Ref" : "NandoDemoPublicRouteTable" }
 			}
 		}, 
    		"NandoDemoELB" : {
      			"Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
			"DependsOn" : "NandoDemoWebLaunchConfig",
      			"Properties" : {
				"Subnets" : [ { "Ref" : "NandoDemoPublicSubnet" } ],
        			"Listeners" : [ 
					{ "LoadBalancerPort" : "80", "InstancePort" : "80", "Protocol" : "HTTP" },
					{ "LoadBalancerPort" : "2222", "InstancePort" : "22", "Protocol" : "TCP" }
				],
        			"HealthCheck" : {
          				"Target" : "HTTP:80/",
          				"HealthyThreshold" : "2",
          				"UnhealthyThreshold" : "5",
          				"Interval" : "5",
          				"Timeout" : "4"
        			},
				"SecurityGroups" : [ { "Ref" : "NandoDemoSecurityGroup" } ]
      			}
    		},
      		"NandoDemoELBCNAME" : {
        		"Type" : "AWS::Route53::RecordSetGroup",
			"DependsOn" : "NandoDemoELB",
        		"Properties" : {
          			"HostedZoneName" : { "Ref" : "NandoDemoZone" },
          			"RecordSets" : [ {
              				"Name" : { "Fn::Join" : [ ".", [ { "Ref" : "NandoDemoName" }, { "Ref" : "NandoDemoZone" } ] ] },
              				"Type" : "A",
              				"AliasTarget" : {
                  				"HostedZoneId" : { "Fn::GetAtt" : [ "NandoDemoELB", "CanonicalHostedZoneNameID" ] },
                  				"DNSName" : { "Fn::GetAtt" : [ "NandoDemoELB","CanonicalHostedZoneName" ] }
              				}
            			} ]
			}
        	},
                "NandoDemoCNAME" : {
                        "Type" : "AWS::Route53::RecordSetGroup",
                        "DependsOn" : "NandoDemoELB",
                        "Properties" : {
                                "HostedZoneName" : { "Ref" : "NandoDemoZone" },
                                "RecordSets" : [ {
                                        "Name" : { "Fn::Join" : [ ".", [ "nando-automation-demo", { "Ref" : "NandoDemoZone" } ] ] },
                                        "Type" : "A",
                                        "AliasTarget" : {
                                                "HostedZoneId" : { "Fn::GetAtt" : [ "NandoDemoELB", "CanonicalHostedZoneNameID" ] },
                                                "DNSName" : { "Fn::GetAtt" : [ "NandoDemoELB","CanonicalHostedZoneName" ] }
                                        }
                                } ]
                        }
                },
		"NandoDemoJenkins" : {
 			"Type" : "AWS::EC2::Instance",
 			"DependsOn" : "NandoDemoInternetGatewayAttach",
 			"Properties" : {
        			"KeyName" : { "Ref" : "KeyName" },
 				"InstanceType" : { "Ref" : "InstanceType" },
 				"ImageId" : "ami-fb8e9292",
				"AvailabilityZone" : { "Ref" : "AZ" },
            			"IamInstanceProfile": { "Ref": "NandoDemoInstanceProfile" },
        			"NetworkInterfaces" : [ { 
          				"NetworkInterfaceId" : {"Ref" : "NandoDemoJenkinsEth0" },
          				"DeviceIndex" : "0"
        			} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          				"#!/bin/bash\n",
          				"yum update -y aws-cfn-bootstrap\n",
             				"/opt/aws/bin/cfn-init -v ",
             				"         --stack ", { "Ref" : "AWS::StackName" },
             				"         --resource NandoDemoJenkins ",
             				"         --region ", { "Ref" : "AWS::Region" }, "\n",
             				"/opt/aws/bin/cfn-signal -e $? ",
             				"         --stack ", { "Ref" : "AWS::StackName" },
             				"         --resource NandoDemoJenkins ",
             				"         --region ", { "Ref" : "AWS::Region" }, "\n"
        			] ] } }
 			},
                        "Metadata" : {                          
                                "Comment" : "Nando Demo Jenkins",    
				"AWS::CloudFormation::Authentication": {
					"S3AccessCreds" : {
						"type" : "S3",
						"roleName" : { "Ref" : "NandoDemoRole" },
						"buckets" : [ "nando-automation-demo" ]
					}
				},
                                "AWS::CloudFormation::Init" : { 
                                        "config" : {            
                                                "files" : {             
                                                        "/etc/cfn/cfn-hup.conf" : {
                                                                "content" : { "Fn::Join" : [ "", [
                                                                        "[main]\n",
                                                                        "stack=", { "Ref" : "AWS::StackId" }, "\n",
                                                                        "region=", { "Ref" : "AWS::Region" }, "\n"
                                                                ] ] },    
                                                                "mode" : "000400",
                                                                "owner" : "root",
                                                                "group" : "root"
                                                        },      
                                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                                                                "content" : { "Fn::Join" : [ "", [
                                                                        "[cfn-auto-reloader-hook]\n",
                                                                        "triggers=post.update\n",
                                                                        "path=Resources.NandoDemoJenkins.Metadata.AWS::CloudFormation::Init\n",
                                                                        "action=/opt/aws/bin/cfn-init -v ",
                                                                        "         --stack ", { "Ref" : "AWS::StackName" },
                                                                        "         --resource NandoDemoJenkins ",
                                                                        "         --region ", { "Ref" : "AWS::Region" }, "\n",
                                                                        "runas=root\n"
                                                                ] ] }
                                                        },
							"/etc/puppet/installjenkins.pp" : {
								"source" : "http://nando-automation-demo.s3.amazonaws.com/installjenkins.pp",
                           					"mode" : "000400",
                                                                "owner" : "root",
                                                                "group" : "root",
								"authentication" : "S3AccessCreds"
							},
							"/etc/puppet/installjenkinsjob.pp" : {
								"source" : "http://nando-automation-demo.s3.amazonaws.com/installjenkinsjob.pp",
                           					"mode" : "000400",
                                                                "owner" : "root",
                                                                "group" : "root",
								"authentication" : "S3AccessCreds"
							},
                                                        "/etc/puppet/installjenkinsmodules.pp" : {
                                                                "source" : "http://nando-automation-demo.s3.amazonaws.com/installjenkinsmodules.pp",
                                                                "mode" : "000400",
                                                                "owner" : "root",
                                                                "group" : "root",
								"authentication" : "S3AccessCreds"
                                                        },
                                                       "/etc/puppet/installjenkinsusers.pp" : {
                                                                "source" : "http://nando-automation-demo.s3.amazonaws.com/installjenkinsusers.pp",
                                                                "mode" : "000400",
                                                                "owner" : "root",
                                                                "group" : "root",
                                                                "authentication" : "S3AccessCreds"
                                                        },
                                                       "/etc/puppet/installjenkinssecurity.pp" : {
                                                                "source" : "http://nando-automation-demo.s3.amazonaws.com/installjenkinssecurity.pp",
                                                                "mode" : "000400",
                                                                "owner" : "root",
                                                                "group" : "root",
                                                                "authentication" : "S3AccessCreds"
                                                        },
							"/etc/puppet/nando-automation-demo.xml.erb" : {
								"source" : "http://nando-automation-demo.s3.amazonaws.com/jenkins.xml.erb",
                           					"mode" : "000400",
                                                                "owner" : "root",
                                                                "group" : "root",
								"authentication" : "S3AccessCreds"
							},
							"/var/lib/jenkins/nando-demo.pem" : {
								"content" : { "Ref" : "PrivateKey" },
								"mode" : "000400",
                                                                "owner" : "root",
                                                                "group" : "root",
								"authentication" : "S3AccessCreds"
							},
							"/var/lib/jenkins/cloudformation-stack-name" : {
								"content" : { "Ref" : "AWS::StackName" },
								"mode" : "000400",
                                                                "owner" : "root",
                                                                "group" : "root",
								"authentication" : "S3AccessCreds"
							}
                                                },
						"commands" : {
							"bootstrapA" : { "command" : "yum -y install git" },
							"bootstrapB" : { "command" : "yum -y install puppet" },
							"bootstrapC" : { "command" : "mkdir -pv /etc/puppet/modules" },
							"bootstrapD" : { "command" : "mkdir -pv /var/lib/jenkins" },
							"bootstrapE" : { "command" : "puppet module install rtyler/jenkins" },
							"bootstrapF" : { "command" : "sed -i s/RedHat/Linux/g /etc/puppet/modules/java/manifests/params.pp" },
							"bootstrapG" : { "command" : "yum -y install python-pip" },
							"bootstrapH" : { "command" : "pip install python-instagram" },
							"bootstrapJ" : { "command" : "pip install --upgrade awscli" },
							"installjenkinsA" : { "command" : "puppet apply /etc/puppet/installjenkins.pp" },
 							"installjenkinsB" : { "command" : "sleep 30" },
							"installjenkinsC" : { "command" : "puppet apply /etc/puppet/installjenkinsmodules.pp" },
 							"installjenkinsD" : { "command" : "sleep 15" },
							"installjenkinsE" : { "command" : "puppet apply /etc/puppet/installjenkinsjob.pp" },
							"installjenkinsF" : { "command" : "/bin/sed -i 's|java|/usr/bin/java|g' /etc/puppet/modules/jenkins/manifests/cli.pp" },
                                                        "installjenkinsG" : { "command" : "puppet apply /etc/puppet/installjenkinsusers.pp" },
							"installjenkinsH" : { "command" : "puppet apply /etc/puppet/installjenkinssecurity.pp" }
						},
                                                "services" : {
                                                        "sysvinit" : {
								"jenkins" : { "enabled" : "true", "ensureRunning" : "true" },	
                                                                "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
                                                                "files" : [ "/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf" ] }
                                               		}
                                                }
                                        }
                                }
      			},
      			"CreationPolicy" : {
        			"ResourceSignal" : {
          				"Timeout" : "PT10M"
        			}
      			}
 		},
		"NandoDemoWebASG" : {
      			"Type": "AWS::AutoScaling::AutoScalingGroup",
      			"Version": "2009-05-15",
 			"DependsOn" : "NandoDemoVPC",
      			"Properties": {
				"AvailabilityZones" : [ { "Ref" : "AZ" } ],
        			"LaunchConfigurationName": { "Ref": "NandoDemoWebLaunchConfig" },
				"LoadBalancerNames" : [ {"Ref" : "NandoDemoELB" } ],
				"VPCZoneIdentifier" : [ { "Ref" : "NandoDemoPublicSubnet" } ],
        			"MinSize": "2",
        			"MaxSize": "2",
        			"Tags" : [ {
          				"Key"   : "Name",
          				"Value" : { "Fn::Join"  : [ "-" , [ { "Ref" : "AWS::StackName" }, "webserver" ]]},
          				"PropagateAtLaunch" : "true"
        			} ]
			}
      		},
		"NandoDemoWebLaunchConfig" : {
   			"Type" : "AWS::AutoScaling::LaunchConfiguration",
 			"DependsOn" : "NandoDemoInternetGatewayAttach",
      			"Metadata" : {
        			"Comment" : "Nando Demo Instance One",
        			"AWS::CloudFormation::Init" : {
          				"config" : {
            					"packages" : {
              						"yum" : {
                						"httpd" : []
              						}
            					},
            					"files" : {
              						"/var/www/html/index.html" : { 
								"content" : "<h1>Nando Automation Demo.</h1>",
                						"mode" : "000644",
                						"owner" : "root",
                						"group" : "root"
              						},
              						"/etc/cfn/cfn-hup.conf" : {
                						"content" : { "Fn::Join" : [ "", [
                  							"[main]\n",
                  							"stack=", { "Ref" : "AWS::StackId" }, "\n",
                  							"region=", { "Ref" : "AWS::Region" }, "\n"
                						] ] },
                						"mode" : "000400",
                						"owner" : "root",
                						"group" : "root"
              						},
              						"/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                						"content" : { "Fn::Join" : [ "", [
                  							"[cfn-auto-reloader-hook]\n",
                  							"triggers=post.update\n",
                  							"path=Resources.NandoDemoWebASG.Metadata.AWS::CloudFormation::Init\n",
                  							"action=/opt/aws/bin/cfn-init -v ",
                  							"         --stack ", { "Ref" : "AWS::StackName" },
                  							"         --resource NandoDemoWebLaunchConfig ",
                  							"         --region ", { "Ref" : "AWS::Region" }, "\n",
                  							"runas=root\n"
                						] ] }
              						}
            					},
            					"services" : {
              						"sysvinit" : {
                						"httpd" : { "enabled" : "true", "ensureRunning" : "true" },
                						"cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
                              					"files" : [ "/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf" ] }
              						}
            					}
          				}
        			}
      			},
      			"Properties" : {
        			"KeyName" : { "Ref" : "KeyName" },
        			"InstanceType" : { "Ref" : "InstanceType" },
 				"ImageId" : "ami-fb8e9292",
				"AssociatePublicIpAddress" : "true",
				"SecurityGroups": [ { "Ref": "NandoDemoSecurityGroup" } ],
        			"UserData"       : { "Fn::Base64" : { "Fn::Join" : [ "", [
             				"#!/bin/bash -xe\n",
             				"yum update -y aws-cfn-bootstrap\n",
             				"/opt/aws/bin/cfn-init -v ",
             				"         --stack ", { "Ref" : "AWS::StackName" },
             				"         --resource NandoDemoWebLaunchConfig ",
             				"         --region ", { "Ref" : "AWS::Region" }, "\n",
             				"/opt/aws/bin/cfn-signal -e $? ",
             				"         --stack ", { "Ref" : "AWS::StackName" },
             				"         --resource NandoDemoWebLaunchConfig ",
             				"         --region ", { "Ref" : "AWS::Region" }, "\n"
        				] ] }
				}
      			},
      			"CreationPolicy" : {
        			"ResourceSignal" : {
          				"Timeout" : "PT5M"
        			}
      			}
    		},
    		"NandoDemoSecurityGroup" : {
      			"Type" : "AWS::EC2::SecurityGroup",
      			"Properties" : {
        			"GroupDescription" : "nando-demo",
        			"VpcId" : { "Ref" : "NandoDemoVPC" },
        			"SecurityGroupIngress" : [ 
        				{ "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
					{ "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "10.200.0.0/16" },
					{ "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "Location1" } },
					{ "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "Location2" } },
					{ "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "Location3" } },
					{ "IpProtocol" : "tcp", "FromPort" : "2222", "ToPort" : "2222", "CidrIp" : { "Ref" : "Location1" } },
					{ "IpProtocol" : "tcp", "FromPort" : "2222", "ToPort" : "2222", "CidrIp" : { "Ref" : "Location2" } },
					{ "IpProtocol" : "tcp", "FromPort" : "2222", "ToPort" : "2222", "CidrIp" : { "Ref" : "Location3" } },
					{ "IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : { "Ref" : "Location1" } },
					{ "IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : { "Ref" : "Location2" } },
					{ "IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : { "Ref" : "Location3" } }
				]
      			}
    		},
	      	"NandoDemoRole": {
         		"Type": "AWS::IAM::Role",
         		"Properties": {
            			"AssumeRolePolicyDocument": {
               				"Version" : "2012-10-17",
               				"Statement": [ {
                  				"Effect": "Allow",
                  				"Principal": { "Service": [ "ec2.amazonaws.com" ] },
                  				"Action": [ "sts:AssumeRole" ]
               				} ]
            			},
            			"Path": "/"
         		}
      		},
      		"NandoDemoIAMPolicy": {
     			"Type": "AWS::IAM::Policy",
         		"Properties": {
            			"PolicyName": "nando-demo-policy",
            			"PolicyDocument": {
               				"Version" : "2012-10-17",
					"Statement": [ {
      						"Action": [
        						"autoscaling:Describe*",
        						"cloudformation:DescribeStacks",
        						"ec2:Describe*",
        						"s3:Get*"
      						],
      						"Effect": "Allow",
      						"Resource": "*"
    					} ]
            			},
            			"Roles": [ { "Ref": "NandoDemoRole" } ]
         		}
      		},
      		"NandoDemoInstanceProfile": {
         		"Type": "AWS::IAM::InstanceProfile",
         		"Properties": {
            			"Path": "/",
            			"Roles": [ { "Ref": "NandoDemoRole" } ]
         		}
      		},
		"NandoDemoBucketPolicy" : {
   			"Type" : "AWS::S3::BucketPolicy",
   			"Properties" : {
      				"PolicyDocument" : {
         				"Id" : "NandoDemoBucketPolicy",
         				"Version": "2012-10-17",
         				"Statement" : [ {
            					"Sid" : "allowTrustedIPs",
            					"Action" : [ "s3:*" ],
            					"Effect" : "Allow",
            					"Resource" : { "Fn::Join" : [ "", [ "arn:aws:s3:::", { "Ref" : "NandoDemoBucket" } , "/*" ] ] },
            					"Principal" : "*",
						"Condition" :  { "IpAddress" : { "aws:SourceIp" : [ 
							{ "Ref" : "Location1" }, 
							{ "Ref" : "Location2" }, 
							{ "Ref" : "Location3" } 
						] } }
         				} ]
      				},
      				"Bucket" : { "Ref" : "NandoDemoBucket" }
      			}
   		},
		"NandoDemoBucket" : {
 			"Type" : "AWS::S3::Bucket",
			"Properties" : { 
				"WebsiteConfiguration" : { 
					"IndexDocument" : "index.html" 
				}
             		}
		}
	},
  	"Outputs" : {
		"NandoDemoBucket" : { "Value" : { "Ref" : "NandoDemoBucket" } },
		"NandoDemoWebASG" : { "Value" : { "Ref" : "NandoDemoWebASG" } },
    		"NandoDemoJenkinsEIP" : { "Value" : { "Ref" : "NandoDemoJenkinsEIP" } },
    		"NandoDemoJenkinsURL" : { "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "NandoDemoJenkins", "PublicDnsName" ] }, ":8080" ] ] } },
      		"NandoDemoELBDNSNAME" : { "Value" : { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "NandoDemoELB", "DNSName" ] } ] ] } },
		"NandoDemoELBCNAME" : { "Value" : { "Fn::Join" : [ "", [ "http://", { "Ref" : "NandoDemoName" }, ".", { "Ref" : "NandoDemoZone" } ] ] } },
		"NandoDemoName" : { "Value" : { "Ref" : "NandoDemoName" } },
		"NandoDemoCNAME" : { "Value" : { "Fn::Join" : [ "", [ "http://", "nando-automation-demo.", { "Ref" : "NandoDemoZone" } ] ] } },
   		"NandoDemoBucketURL" : { "Value" : { "Fn::Join" : [ "", [ "http://", { "Ref" : "NandoDemoBucket" }, ".s3-website-us-east-1.amazonaws.com" ] ] } }
  	}
}
